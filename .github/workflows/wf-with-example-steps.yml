# Workflow with some simple steps, i.e. a sequence of tasks accomplished by various commands

name: Workflow Example Steps

# Controls when the workflow will run
on:
  # Triggers the workflow pull request events but only for the "main" branch
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize , closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job with a sequence of example-steps
  example-steps:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # install tree
      - run: sudo apt install tree
      
      # install jq
      - run: sudo apt install jq
      
      #  Checks-out this repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v3
        with:
          #remote_username: ${{ secrets.REMOTE_USERNAME }}
          #remote_password: ${{ secrets.REMOTE_PASSWORD }}
          #remote_server: ${{ secrets.REMOTE_SERVER }}
          remote_username: "testuser"
          remote_password: "D0N0tUse*009"
          remote_server: "65.108.222.254"
      
      - name: Make output directory
        run: mkdir ./wkflow-output
        
      - name: Get current path and capture it for later display
        run:  pwd>./wkflow-output/test.out
        
      - name: Get folder structure and capture it for later display
        run: tree>>./wkflow-output/test.out
        
      - name: Get GITHUB_WORKSPACE env variable value and capture it for later display
        run: echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE">>./wkflow-output/test.out
        
      - name: Output contents of file used to capture output from previous commands
        run: cat ./wkflow-output/test.out
        
      - name: Output contents of a file in the repository  
        run: cat ./parameters/test.json
        
      - name: Use jq to read the created_on value from test.json
        run: cat ./parameters/test.json | jq '.created_on'
      
      - name: Use jq to output the keys in test.json
        run: jq 'keys[]' ./parameters/test.json 
        
      - name: Test Connectivity to a remote server using credentials stored in secrets
        run: curl -k sftp://${{ secrets.REMOTE_SERVER }} --user ${{ secrets.REMOTE_USERNAME }}:${{ secrets.REMOTE_PASSWORD }}
        

#      - name: Test Connectivity to a remote server using credentials assigned to variables
#        run: curl -k sftp://$remote_server --user $remote_username:$remote_password
        
      - name: Output variable values
        run: echo "${{ vars.remote_server }}, ${{ vars.remote_username }}, ${{ vars.remote_password }}"
        
        #run: curl -k sftp://{{ secrets.REMOTE_SERVER }}{{ secrets.REMOTE_FILEPATH }} --user {{ secrets.REMOTE_USERNAME }}:{{ secrets.REMOTE_PASSWORD }} -T {{ secrets.LOCAL_FILEPATH }} --ftp-create-dirs     

        
      # Checks-out mp30028/wf-actions-tryout-with-params
      #- uses: mp30028/wf-actions-tryout-with-params/actions@main
      

      #- name: Execute Welcome Timestamps Action
      #  uses: actions/welcome-timestamps@main

      - name: Execute Welcome Timestamps Action
        uses:  mp30028/tryout-workflows/actions/welcome-timestamps@main

